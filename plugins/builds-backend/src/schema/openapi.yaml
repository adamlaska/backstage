openapi: 3.0.3
info:
  title: Builds Backend API
  version: 1.0.0
  description: API for querying and managing build information for entities.
servers:
  - url: /api/builds
paths:
  /:
    get:
      summary: List builds for an entity
      parameters:
        - in: query
          name: entityRef
          schema:
            type: string
          required: true
          description: Entity reference (kind:namespace/name)
      responses:
        '200':
          description: List of builds
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Build'
        '404':
          description: Entity or provider not found
        '500':
          description: Internal server error

  /{buildId}:
    get:
      summary: Get build details
      parameters:
        - in: path
          name: buildId
          schema:
            type: string
          required: true
          description: Build ID
        - in: query
          name: entityRef
          schema:
            type: string
          required: true
          description: Entity reference (kind:namespace/name)
      responses:
        '200':
          description: Build details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
        '404':
          description: Entity or provider not found
        '500':
          description: Internal server error

  /{buildId}/retrigger:
    post:
      summary: Retrigger a build
      parameters:
        - in: path
          name: buildId
          schema:
            type: string
          required: true
          description: Build ID
        - in: query
          name: entityRef
          schema:
            type: string
          required: true
          description: Entity reference (kind:namespace/name)
      responses:
        '202':
          description: Build retriggered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
        '404':
          description: Entity or provider not found
        '500':
          description: Internal server error

  /{buildId}/logs:
    get:
      summary: Stream build logs
      parameters:
        - in: path
          name: buildId
          schema:
            type: string
          required: true
          description: Build ID
        - in: query
          name: entityRef
          schema:
            type: string
          required: true
          description: Entity reference (kind:namespace/name)
      responses:
        '200':
          description: A stream of build logs.
          content:
            text/plain:
              schema:
                type: string
                description: A stream of log lines, separated by newlines.
        '404':
          description: Entity or provider not found
        '500':
          description: Internal server error

components:
  schemas:
    # Schema for the Step object
    Step:
      type: object
      description: |
        Represents a single step in a build stage, such as running tests or building artifacts.
      properties:
        name:
          type: string
          description: The name of the build step.
          example: 'Run unit tests'
        status:
          type: string
          description: The current status of the step.
          enum: [queued, running, success, failed, cancelled, skipped]
          example: 'success'
        startTime:
          type: string
          format: date-time
          description: The ISO 8601 timestamp when the step started.
          example: '2023-10-27T10:05:00Z'
        endTime:
          type: string
          format: date-time
          description: The ISO 8601 timestamp when the step ended.
          example: '2023-10-27T10:15:00Z'
      required:
        - name
        - status

    # Schema for the Stage object
    Stage:
      type: object
      description: |
        A stage is a collection of steps that are executed together, such as "build" or "test".
      properties:
        name:
          type: string
          description: The name of the build stage.
          example: 'Test'
        status:
          type: string
          description: The current status of the stage.
          enum: [queued, running, success, failed, cancelled, skipped]
          example: 'success'
        steps:
          type: array
          description: The list of steps within this stage.
          items:
            $ref: '#/components/schemas/Step'
        startTime:
          type: string
          format: date-time
          description: The ISO 8601 timestamp when the stage started.
          example: '2023-10-27T10:00:00Z'
        endTime:
          type: string
          format: date-time
          description: The ISO 8601 timestamp when the stage ended.
          example: '2023-10-27T10:30:00Z'
      required:
        - name
        - status
        - steps

    # Schema for the Build object
    Build:
      type: object
      description: |
        Represents a single build of an entity, including its status, start and end times,
        associated commit information, and the stages it contains.
      properties:
        providerId:
          type: string
          description: ID of the provider that created this build.
          example: 'github-actions'
        id:
          type: string
          description: The unique identifier for the build.
          example: 'build-12345'
        name:
          type: string
          description: A display name for the build.
          example: 'My App CI/CD #15'
        status:
          type: string
          description: The overall status of the build.
          enum: [queued, running, success, failed, cancelled, skipped]
          example: 'success'
        startTime:
          type: string
          format: date-time
          description: The ISO 8601 timestamp when the build started.
          example: '2023-10-27T09:55:00Z'
        endTime:
          type: string
          format: date-time
          description: The ISO 8601 timestamp when the build ended.
          example: '2023-10-27T11:00:00Z'
        fileUrl:
          type: string
          format: string
          description: A URL to the build file or definition.
          example: 'https://github.com/my-org/my-repo/actions/runs/12345'
        commitBranch:
          type: string
          description: The git branch associated with the build.
          example: 'feature/new-login-flow'
        commitHash:
          type: string
          description: The git commit hash that triggered the build.
          example: 'a1b2c3d4e5f67890'
        commitUrl:
          type: string
          format: string
          description: A URL to the commit.
          example: 'https://github.com/my-org/my-repo/commit/a1b2c3d4e5f67890'
        commitPullRequest:
          type: string
          description: The pull request number or ID.
          example: '123'
        commitAuthor:
          type: string
          description: The author of the commit.
          example: 'Jane Doe'
        stages:
          type: array
          description: The list of stages that make up the build.
          items:
            $ref: '#/components/schemas/Stage'
      required:
        - providerId
        - id
        - name
        - status
        - stages

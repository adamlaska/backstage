import{j as r}from"./jsx-runtime-Cw0GR0a5.js";import{d as D}from"./Search-x_J7H5VZ.js";import{r as t}from"./index-CTjT7uj6.js";import{u as _}from"./useDebounce-4fqASXX_.js";import{S as x,u as K}from"./SearchContext-NUeqQOQ4.js";import{T as N}from"./TextField-CqSiNkPl.js";import{I as b}from"./InputAdornment--MNz9KjP.js";import{I as z}from"./IconButton-BVD_HF4h.js";import{B as V}from"./Button-DR3GtRZd.js";import{u as F}from"./ApiRef-CqkoWjZn.js";import{b as L}from"./index-w6SBqnNd.js";import{A as M}from"./useAnalytics-DVyBXs_0.js";import{c as O}from"./ConfigApi-D1qiBdfc.js";import"./interopRequireDefault-Y9pwbXtE.js";import"./createSvgIcon-rCELOQ8q.js";import"./capitalize-CjHL08xv.js";import"./defaultTheme-U8IXQtr7.js";import"./withStyles-Dj_puyu8.js";import"./hoist-non-react-statics.cjs-DzIEFHQI.js";import"./createChainedFunction-Da-WpsAN.js";import"./createSvgIcon-CAWH9WqG.js";import"./debounce-DtXjJkxj.js";import"./isMuiElement-B_4ddUuK.js";import"./ownerWindow-C3iVrxHF.js";import"./useIsFocusVisible-BQk2_Vhe.js";import"./index-DwHHXP4W.js";import"./useControlled-B47E2WMp.js";import"./unstable_useId-B3Hiq1YI.js";import"./lodash-CoGan1YB.js";import"./useAsync-CXA3qup_.js";import"./useMountedState-DkESzBh4.js";import"./api-B335RvSG.js";import"./FormLabel-CJ3FBCjt.js";import"./formControlState-ByiNFc8I.js";import"./useFormControl-F4cJWIkJ.js";import"./InputLabel-nTfAEcNe.js";import"./Select-DzWFGM1A.js";import"./react-is.production.min-D0tnNtx9.js";import"./useTheme-hfNS2WFw.js";import"./Popover-BpMibsVW.js";import"./Modal-CkYXz1UB.js";import"./classCallCheck-BNzALLS0.js";import"./Portal-BcgI5KAA.js";import"./Paper-BZKq1osr.js";import"./Grow-Bw-3CPgf.js";import"./utils-ClB-4IsE.js";import"./TransitionGroupContext-BtzQ-Cv7.js";import"./List-BslH4zsa.js";import"./ListContext-DydK1sOh.js";import"./Typography-CUBppVl0.js";import"./ButtonBase-DlC9xQ0T.js";const y=t.forwardRef((l,d)=>{const{onChange:o,onKeyDown:n=()=>{},onClear:i=()=>{},onSubmit:s=()=>{},debounceTime:a=200,clearButton:h=!0,fullWidth:m=!0,value:f,label:g,placeholder:C,inputProps:S={},InputProps:v={},endAdornment:B,...A}=l,I=F(O),[p,c]=t.useState(""),u=t.useRef("");t.useEffect(()=>{c(e=>e===u.current?String(f):e)},[f,u]),_(()=>{u.current=p,o(p)},a,[p]);const j=t.useCallback(e=>{c(e.target.value)},[c]),P=t.useCallback(e=>{n&&n(e),s&&e.key==="Enter"&&s()},[n,s]),T=t.useCallback(()=>{u.current="",o(""),c(""),i&&i()},[o,i]),w=g?void 0:"Search",R=C??`Search in ${I.getOptionalString("app.title")||"Backstage"}`,k=L().getSystemIcon("search")||D,E=r.jsx(b,{position:"start",children:r.jsx(z,{"aria-label":"Query",size:"small",disabled:!0,children:r.jsx(k,{})})}),q=r.jsx(b,{position:"end",children:r.jsx(V,{"aria-label":"Clear",size:"small",onClick:T,onKeyDown:e=>{e.key==="Enter"&&e.stopPropagation()},children:"Clear"})});return r.jsx(x,{inheritParentContextIfAvailable:!0,children:r.jsx(N,{id:"search-bar-text-field","data-testid":"search-bar-next",variant:"outlined",margin:"normal",inputRef:d,value:p,label:g,placeholder:R,InputProps:{startAdornment:E,endAdornment:h?q:B,...v},inputProps:{"aria-label":w,...S},fullWidth:m,onChange:j,onKeyDown:P,...A})})}),Q=t.forwardRef((l,d)=>{const{value:o="",onChange:n,...i}=l,{term:s,setTerm:a}=K();t.useEffect(()=>{o&&a(String(o))},[o,a]);const h=t.useCallback(m=>{n?n(m):a(m)},[n,a]);return r.jsx(x,{inheritParentContextIfAvailable:!0,children:r.jsx(M,{attributes:{pluginId:"search",extension:"SearchBar"},children:r.jsx(y,{...i,ref:d,value:s,onChange:h})})})});y.__docgenInfo={description:`All search boxes exported by the search plugin are based on the <SearchBarBase />,
and this one is based on the <InputBase /> component from Material UI.
Recommended if you don't use Search Provider or Search Context.

@public`,methods:[],displayName:"SearchBarBase",props:{debounceTime:{required:!1,tsType:{name:"number"},description:""},clearButton:{required:!1,tsType:{name:"boolean"},description:""},onClear:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},onSubmit:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:""},endAdornment:{required:!1,tsType:{name:"ReactNode"},description:""}}};Q.__docgenInfo={description:`Recommended search bar when you use the Search Provider or Search Context.

@public`,methods:[],displayName:"SearchBar"};export{Q as SearchBar,y as SearchBarBase};
